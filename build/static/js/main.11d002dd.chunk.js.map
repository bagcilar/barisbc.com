{"version":3,"sources":["res/github.png","res/linkedin.png","res/instagram.png","res/grader.png","res/profilePic.png","res/domainFinder.png","res/sleepClock.png","res/resume.pdf","components/footer.js","components/aboutme.js","components/projects.js","components/contact.js","components/helperFunctions.js","components/navBar.js","components/home.js","components/mainPage.js","components/grader.js","components/error.js","components/test.js","components/resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","window","scroll","top","behavior","_this","this","location","hash","react_default","a","createElement","id","onClick","class","NavLink","to","className","navigation","href","target","rel","src","githubIcon","linkedinIcon","instaIcon","Component","AboutMe","document","body","scrollHeight","profilePicture","align","Projects","graderPicture","domainFinderPicture","sleepClockPicture","ContactMe","alert","resetForm","getElementById","reset","placeholder","type","minRows","handleSubmit","bind","navColourAdjuster","style","color","sectionHeaderColourAdj","helperFunctions","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addEventListener","onWindowScroll","removeEventListener","homeBounding","getBoundingClientRect","aboutBounding","projectsBounding","contactBounding","navBar","state","lastHovered","position","innerHeight","scrollTo","element","setState","_this2","onMouseEnter","handleHover","onMouseLeave","handleLeave","particlesOptions","particles","number","value","density","enable","value_area","size","random","anim","speed","size_min","line_linked","move","out_mode","interactivity","detect_on","events","onhover","mode","resize","modes","grab","distance","opacity","home","particles_default","params","greetMessage","hour","Date","getHours","greeter","mainPage","components_home","components_navBar","components_aboutme","components_projects","components_contact","components_helperFunctions","grader","handleOpen","showModal","handleClose","components","name","weight","mark","markingScheme","showReport","prevState","concat","toConsumableArray","i","length","splice","e","_e$target","objectSpread","defineProperty","map","el","key","onChange","handleChange","removeClick","addClick","buttonCaption","_this3","reportArray","report","showing","marker","lostFeedback","accumulatedFeedback","perButtonStyle","markButtonStyle","changeScheme","finalGrade","errorCheck","Math","round","lost","acc","totalAccumulated","totalEnteredWeight","totalUnmarkedWeight","unmarkedWeights","push","cutoff","index","Icon","errorMessage","totalWeight","parseFloat","button","Modal","trigger","open","onClose","basic","Content","Actions","Button","inverted","progress","toString","data-percent","width","maxWidth","modal","selectScheme","addResetButtons","createUI","showProgress","output","React","error","Resume","resumeFile","height","frameborder","allowfullscreen","sandbox","App","HashRouter","Switch","Route","path","component","MainPage","exact","Grader","Error","components_footer","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11d002dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.d22ee372.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.34c68c57.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.4a8c2347.png\";","module.exports = __webpack_public_path__ + \"static/media/grader.d35511d7.png\";","module.exports = __webpack_public_path__ + \"static/media/profilePic.fb2fedee.png\";","module.exports = __webpack_public_path__ + \"static/media/domainFinder.734a963b.png\";","module.exports = __webpack_public_path__ + \"static/media/sleepClock.f6921ce5.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.88739791.pdf\";","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\nimport './css/footer.css';\r\nimport githubIcon from '../res/github.png'\r\nimport linkedinIcon from '../res/linkedin.png'\r\nimport instaIcon from '../res/instagram.png'\r\n\r\nclass Footer extends Component {\r\n\r\n  //handles scrolling to the top of the page\r\n  scroll() {\r\n\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    });\r\n\r\n  }\r\n\r\n  //displays a double arrow icon when on mainPage\r\n  //or 'home' when on other pages for navigation to the top of page\r\n  navigation() {\r\n\r\n    if (window.location.hash == \"#/\") {\r\n\r\n      return (\r\n        <button id=\"footerStartButton\" onClick={() => { this.scroll() }}>\r\n          <i id=\"doubleUpIcon\" class=\"angle double up icon\"></i>\r\n        </button>\r\n      )\r\n\r\n    } else {\r\n      return (\r\n        <NavLink to=\"/\" id=\"homeNav\">home</NavLink>\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    if (window.location.hash != \"#/resume\") {\r\n\r\n      return (\r\n        <div className=\"FooterDiv\">\r\n\r\n          {this.navigation()}\r\n          <div className=\"FooterInnerDiv\">\r\n            <a href=\"https://github.com/bagcilar\" id=\"gitNav\" target=\"_blank\" rel=\"noopener noreferrer\"><img src={githubIcon} id=\"gitIcon\" ></img></a>\r\n            <a href=\"https://ca.linkedin.com/in/baris-bagcilar-361b42108\" id=\"linkNav\" target=\"_blank\" rel=\"noopener noreferrer\"><img src={linkedinIcon} id=\"linkIcon\"></img></a>\r\n            <a href=\"https://www.instagram.com/barisbc22/\" id=\"instaNav\" target=\"_blank\" rel=\"noopener noreferrer\"><img src={instaIcon} id=\"instaIcon\"></img></a>\r\n          </div>\r\n          <div id=\"footerTray\" class=\"ui divider\" ></div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (<div></div>);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './css/aboutme.css';\r\nimport profilePicture from '../res/profilePic.png'\r\n\r\n\r\nclass AboutMe extends Component {\r\n\r\n  scroll() {\r\n\r\n    window.scroll({\r\n      top: document.body.scrollHeight,\r\n      behavior: 'smooth'\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div className=\"aboutMeDiv\">\r\n\r\n        <div>\r\n          <p id=\"aboutHeader\">about me</p>\r\n          <div class=\"ui divider\" ></div>\r\n        </div>\r\n\r\n        <img className=\"profilePicture\" src={profilePicture} />\r\n\r\n        <div className=\"aboutMeTextDiv\">\r\n          <div className=\"aboutMePart1\">\r\n            <p align=\"center\">Hi!</p>\r\n            <p align=\"center\">My name is Baris, I'm an undergraduate CS student at York University in Toronto, ON</p>\r\n          </div>\r\n          <div className=\"aboutMePart2\">\r\n            <p align=\"center\">I am currently looking for a co-op position for Winter 2020. On this website, you can see some minor projects I'm working on</p>\r\n            <p align=\"center\">Go <span> <button id=\"contactTextButton\" onClick={() => { this.scroll() }} >here</button> </span> if you'd like to contact me!</p>\r\n          </div>\r\n          <div class=\"ui divider\" ></div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\nimport './css/projects.css';\r\nimport graderPicture from '../res/grader.png'\r\nimport domainFinderPicture from '../res/domainFinder.png'\r\nimport sleepClockPicture from '../res/sleepClock.png'\r\n\r\nvar graderDescription = \"Enter your marks for components of a course, receive continuous feedback, dynamically calculate your final grade\";\r\n\r\nclass Projects extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"ProjectsDiv\">\r\n\r\n                <div>\r\n                    <p id=\"projectsHeader\">projects</p>\r\n                    <div class=\"ui divider\" ></div>\r\n                </div>\r\n\r\n\r\n                <div className=\"projectList\">\r\n\r\n                    <NavLink to=\"/grader\" id=\"graderNav\">\r\n                        <div className=\"navSection\">\r\n                            <img src={graderPicture} className=\"graderImage\" />\r\n                            <div className=\"textSection\">\r\n                                <h1>Grader</h1>\r\n                                <div class=\"ui divider\" ></div>\r\n                                {graderDescription}\r\n                            </div>\r\n                        </div>\r\n                    </NavLink>\r\n\r\n\r\n                    <NavLink to=\"\" id=\"domainFinderNav\">\r\n                        <div className=\"navSection\">\r\n                            <img src={domainFinderPicture} className=\"domainFinderImage\" />\r\n                            <div className=\"textSection\">\r\n                                <h1>Domain Finder</h1>\r\n                                <div class=\"ui divider\" ></div>\r\n                                <p>This app is currently under construction</p>\r\n                                <p>Please try again later...</p>\r\n                            </div>\r\n                        </div>\r\n                    </NavLink>\r\n\r\n\r\n                    <NavLink to=\"\" id=\"sleepClockNav\">\r\n                        <div className=\"navSection\">\r\n                            <img src={sleepClockPicture} className=\"sleepClockImage\" />\r\n                            <div className=\"textSection\">\r\n                                <h1>Sleep Clock</h1>\r\n                                <div class=\"ui divider\" ></div>\r\n                                <p>This app is currently under construction</p>\r\n                                <p>Please try again later...</p>\r\n                            </div>\r\n                        </div>\r\n                    </NavLink>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\nimport { Form, Button, Divider, Modal, Icon } from 'semantic-ui-react'\r\n\r\nimport './css/contact.css';\r\n\r\nclass ContactMe extends Component {\r\n\r\n\r\n    handleSubmit() {\r\n        alert(\"thank you for your email!\");\r\n        this.resetForm();\r\n    }\r\n\r\n    resetForm() {\r\n        document.getElementById(\"contactForm\").reset();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"contactSegment\">\r\n\r\n                <div>\r\n                    <p id=\"contactHeader\">contact</p>\r\n                    <div class=\"ui divider\" id=\"contactTray\"></div>\r\n                </div>\r\n\r\n                <form class=\"ui form\" id=\"contactForm\">\r\n\r\n                    <div class=\"field\">\r\n                        <label id=\"nameLabel\">Name</label>\r\n                        <input placeholder=\"name\" type=\"text\" id=\"name\"></input>\r\n                    </div>\r\n\r\n                    <div class=\"field\">\r\n                        <label id=\"emailLabel\">E-mail</label>\r\n                        <input placeholder=\"email\" type=\"text\" id=\"email\"></input>\r\n                    </div>\r\n\r\n                    <div class=\"field\">\r\n                        <textarea minRows=\"1\" placeholder=\"enter your message...\" id=\"message\"></textarea>\r\n                    </div>\r\n\r\n                    <button class=\"ui inverted red button\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>submit</button>\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactMe;","\r\nimport React, { Component } from 'react';\r\n\r\n//colouring of the nav bar according to the target value passed\r\nexport function navColourAdjuster(target) {\r\n    document.getElementById(\"homeSectionButton\").style.color = \"grey\";\r\n    document.getElementById(\"projectsSectionButton\").style.color = \"grey\";\r\n    document.getElementById(\"aboutSectionButton\").style.color = \"grey\";\r\n    document.getElementById(\"contactSectionButton\").style.color = \"grey\";\r\n    document.getElementById(target).style.color = \"brown\";\r\n}\r\n\r\n//colouring of the section headers according to the target value passed\r\nexport function sectionHeaderColourAdj(target) {\r\n  document.getElementById(\"aboutHeader\").style.color = \"grey\";\r\n  document.getElementById(\"projectsHeader\").style.color = \"grey\";\r\n  document.getElementById(\"contactHeader\").style.color = \"grey\";\r\n  document.getElementById(target).style.color = \"brown\";\r\n}\r\n\r\n\r\nclass helperFunctions extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  //listens for scrolling events\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.onWindowScroll);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.onWindowScroll);\r\n  }\r\n\r\n  //checks the current viewport location when there is a scroll, adjusts colour of nav bar item accordingly\r\n  onWindowScroll() {\r\n    var homeBounding = document.getElementById(\"homeSection\").getBoundingClientRect();\r\n    var aboutBounding = document.getElementById(\"aboutMeSection\").getBoundingClientRect();\r\n    var projectsBounding = document.getElementById(\"projectsSection\").getBoundingClientRect();\r\n    var contactBounding = document.getElementById(\"contactSection\").getBoundingClientRect();\r\n    var threshold = 70;\r\n\r\n    if (homeBounding.top > -threshold && homeBounding.top < threshold) {\r\n      navColourAdjuster(\"homeSectionButton\")\r\n      sectionHeaderColourAdj(\"contactHeader\")\r\n    }\r\n    else if (aboutBounding.top > -threshold && aboutBounding.top < threshold) {\r\n      navColourAdjuster(\"aboutSectionButton\")\r\n      sectionHeaderColourAdj(\"aboutHeader\")\r\n    }\r\n    else if (projectsBounding.top > -threshold && projectsBounding.top < threshold) {\r\n      navColourAdjuster(\"projectsSectionButton\")\r\n      sectionHeaderColourAdj(\"projectsHeader\")\r\n    }\r\n    else if (contactBounding.top > -threshold && contactBounding.top < threshold) {\r\n      navColourAdjuster(\"contactSectionButton\")\r\n      sectionHeaderColourAdj(\"contactHeader\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default helperFunctions;","import React, { Component } from 'react';\r\nimport './css/navBar.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { navColourAdjuster } from './helperFunctions.js';\r\n\r\n\r\nclass navBar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      lastHovered: 'homeSectionButton'\r\n    };\r\n  }\r\n\r\n  //scrolls to the appropriate section and adjusts nav bar colour on nav bar clicks\r\n  scroll(location) {\r\n\r\n    var position = window.innerHeight;\r\n\r\n    var target = location + \"SectionButton\";\r\n\r\n    if (location === \"home\") {\r\n      position = 0;\r\n    }\r\n    else if (location === \"projects\") {\r\n      position *= 2;\r\n    } else if (location == \"contact\") {\r\n      position = document.body.scrollHeight;\r\n    }\r\n\r\n    window.scrollTo({\r\n      top: position,\r\n      behavior: 'smooth'\r\n    });\r\n\r\n    navColourAdjuster(target);\r\n    \r\n  }\r\n\r\n\r\n  //changes the colour of nav element to brown on hover\r\n  handleHover(target) {\r\n    var element = document.getElementById(target);\r\n\r\n    //checks if hovered item is in view, if so sets the state\r\n    if (element.style.color == \"brown\") {\r\n      this.setState({ lastHovered: target })\r\n    }\r\n\r\n    element.style.color = \"brown\"\r\n\r\n  }\r\n\r\n  //changes the colour of nav item to grey on mouseleave unless it signifies the section in view\r\n  handleLeave(target) {\r\n    var element = document.getElementById(target);\r\n\r\n    //checks if the item the mouse leaves signifies the section in view\r\n    //if it doesn't, color is changed to grey\r\n    if (this.state.lastHovered !== target) {\r\n      element.style.color = \"grey\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"headerDiv\">\r\n        <button\r\n          id=\"homeSectionButton\"\r\n          onMouseEnter={() => { this.handleHover(\"homeSectionButton\") }}\r\n          onMouseLeave={() => { this.handleLeave(\"homeSectionButton\") }}\r\n          onClick={() => { this.scroll(\"home\") }}>\r\n          home\r\n            </button>\r\n        <button\r\n          id=\"aboutSectionButton\"\r\n          onMouseEnter={() => { this.handleHover(\"aboutSectionButton\") }}\r\n          onMouseLeave={() => { this.handleLeave(\"aboutSectionButton\") }}\r\n          onClick={() => { this.scroll(\"about\") }}>\r\n          about me\r\n            </button>\r\n        <button\r\n          id=\"projectsSectionButton\"\r\n          onMouseEnter={() => { this.handleHover(\"projectsSectionButton\") }}\r\n          onMouseLeave={() => { this.handleLeave(\"projectsSectionButton\") }}\r\n          onClick={() => { this.scroll(\"projects\") }}>\r\n          projects\r\n            </button>\r\n        <button\r\n          id=\"contactSectionButton\"\r\n          onMouseEnter={() => { this.handleHover(\"contactSectionButton\") }}\r\n          onMouseLeave={() => { this.handleLeave(\"contactSectionButton\") }}\r\n          onClick={() => { this.scroll(\"contact\") }}>\r\n          contact\r\n            </button>\r\n\r\n        <NavLink to=\"/resume\" target=\"_blank\" id=\"resumeNav\">resume</NavLink>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default navBar;","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport { navColourAdjuster } from './helperFunctions.js';\r\nimport './css/home.css';\r\n\r\n//obtains time of user and sets the greeting message\r\nfunction greeter() {\r\n    var greetMessage = \"\";\r\n    var date = new Date();\r\n    var hour = date.getHours();\r\n    if (hour >= 12 && hour <= 17) {\r\n        greetMessage = \"Good Afternoon!\"\r\n    } else if (hour >= 17 && hour <= 24) {\r\n        greetMessage = \"Good Evening!\"\r\n    } else if (hour <= 12) {\r\n        greetMessage = \"Good Morning!\"\r\n    }\r\n    return greetMessage;\r\n}\r\n\r\n//sets the options for particles.js\r\nconst particlesOptions = {\r\n    particles: {\r\n        number: {\r\n            value: 100,\r\n            density: {\r\n                enable: true,\r\n                value_area: 1000\r\n            }\r\n        },\r\n        size: {\r\n            value: 2,\r\n            random: true,\r\n            anim: {\r\n                speed: 5,\r\n                size_min: 0.3\r\n            }\r\n        },\r\n        line_linked: {\r\n            enable: true\r\n        },\r\n        move: {\r\n            random: true,\r\n            speed: 1,\r\n            out_mode: \"out\"\r\n        }\r\n    },\r\n    interactivity: {\r\n        detect_on: 'canvas',\r\n        events: {\r\n            onhover: {\r\n                enable: true,\r\n                mode: 'grab'\r\n            },\r\n            resize: true\r\n        },\r\n        modes: {\r\n            grab: {\r\n                distance: 100,\r\n                line_linked: {\r\n                    opacity: 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass home extends Component {\r\n\r\n    //scrolls to the aboutme section\r\n    scroll(location) {\r\n\r\n        window.scrollTo({\r\n            top: window.innerHeight,\r\n            behavior: 'smooth'\r\n        });\r\n\r\n        navColourAdjuster(\"aboutMeSection\");\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Particles className='particles' params={particlesOptions} />\r\n                <div className=\"WelcomeMessageDiv\">\r\n                    <p id=\"timeGreeting\" align=\"center\">{greeter()}</p>\r\n                    <p id=\"welcomeMessage\" align=\"center\"> welcome to <span align=\"center\" id=\"welcomeMessagePart2\">barisbc.com</span></p>\r\n                    <button id=\"startButton\" onClick={() => { this.scroll(\"about\") }}>\r\n                        <i class=\"angle double down icon\"></i>\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default home;","import React, { Component } from 'react';\r\nimport './css/mainPage.css';\r\n\r\nimport AboutMe from './aboutme.js';\r\nimport Projects from './projects.js';\r\nimport Contact from './contact.js';\r\nimport NavBar from './navBar.js';\r\nimport Home from './home.js';\r\nimport HelperFunctions from './helperFunctions.js';\r\n\r\nclass mainPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div className=\"MainPage\">\r\n\r\n        <section id=\"homeSection\">\r\n          <Home />\r\n        </section>\r\n\r\n        <section id=\"headerSection\">\r\n          <NavBar />\r\n        </section>\r\n\r\n        <section id=\"aboutMeSection\">\r\n          <AboutMe />\r\n        </section>\r\n\r\n        <section id=\"projectsSection\">\r\n          <Projects />\r\n        </section>\r\n\r\n        <section id=\"contactSection\">\r\n          <Contact />\r\n        </section>\r\n\r\n        <HelperFunctions />\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default mainPage;","import React, { Component } from 'react';\r\nimport { Form, Button, Divider, Modal, Icon, Progress, Checkbox } from 'semantic-ui-react'\r\nimport './css/grader.css';\r\n\r\nclass grader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            components: [{ name: \"\", weight: \"\", mark: \"\" }],\r\n            markingScheme: 'percentage',\r\n            showReport: false,\r\n            showModal: false\r\n        };\r\n    }\r\n\r\n    //handles the addition of a component\r\n    addClick() {\r\n        this.setState(prevState => ({\r\n            components: [...prevState.components, { name: \"\", weight: \"\", mark: \"\" }]\r\n        }))\r\n    }\r\n\r\n    //handles the removal of a component\r\n    removeClick(i) {\r\n        let components = [...this.state.components];\r\n        if (components.length !== 1) {\r\n            components.splice(i, 1);\r\n            this.setState({ components });\r\n        }\r\n    }\r\n\r\n    //handles the changes in the state of components\r\n    handleChange(i, e) {\r\n        const { name, value } = e.target;\r\n        let components = [...this.state.components];\r\n        components[i] = { ...components[i], [name]: value };\r\n        this.setState({ components });\r\n    }\r\n\r\n    //handles the dynamic UI creation that involves name, weight, mark fields and associated remove buttons\r\n    createUI() {\r\n        return this.state.components.map((el, i) => (\r\n            <div class=\"ui form\" key={i}>\r\n\r\n                <div class=\"inline fields\" className=\"UIComponents\">\r\n\r\n                    <div class=\"field\">\r\n                        <input id=\"nameField\" type=\"text\" placeholder=\"name\" name=\"name\" value={el.name || ''} onChange={this.handleChange.bind(this, i)} />\r\n                    </div>\r\n\r\n                    <div className=\"WeightMarkInputs\">\r\n\r\n                        <div class=\"field\">\r\n                            <input id=\"weightField\" className=\"weightField\" type=\"number\" placeholder=\"weight\" name=\"weight\" value={el.weight || ''} onChange={this.handleChange.bind(this, i)} />\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <input id=\"markField\" type=\"number\" placeholder={this.state.markingScheme} name=\"mark\" value={el.mark || ''} onChange={this.handleChange.bind(this, i)} />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <button class=\"ui inverted red button\" id=\"removeButton\" onClick={this.removeClick.bind(this, i)}>remove</button>\r\n\r\n                </div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    //buttons that handle adding components and reseting grader\r\n    addResetButtons() {\r\n        return (\r\n            <div className=\"AddResetButtons\">\r\n                <button className=\"AddButton\" class=\"ui primary button\" onClick={this.addClick.bind(this)}>add</button>\r\n                <button className=\"ResetButton\" class=\"ui grey button\" onClick={this.reset.bind(this)}>reset</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //handles the output of feedback, final mark, and report\r\n    output() {\r\n\r\n        var reportArray = this.report();\r\n        var showing = this.state.showReport;\r\n        var buttonCaption;\r\n        if (showing) {\r\n            buttonCaption = \"Hide Report\"\r\n        } else {\r\n            buttonCaption = \"Show Report\"\r\n        }\r\n\r\n        return (\r\n\r\n            <div id=\"outputFields\" class=\"ui segment\">\r\n\r\n                <div>\r\n                    <p>Final Mark: {this.marker()}</p>\r\n                </div>\r\n\r\n                <div class=\"ui divider\" id=\"homePageUpperDivider\"></div>\r\n\r\n                <div>\r\n                    <p>Lost So Far: {this.lostFeedback()}</p>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Accumulated: {this.accumulatedFeedback()}</p>\r\n                </div>\r\n\r\n                <div class=\"ui divider\" id=\"homePageUpperDivider\"></div>\r\n\r\n                <button id=\"showReportButton\" onClick={() => this.setState({ showReport: !showing })}>{buttonCaption}</button>\r\n\r\n                {showing\r\n                    ?\r\n                    <div id=\"reportSection\">\r\n                        <p>95%: {reportArray[0]}</p>\r\n                        <p>90%: {reportArray[1]}</p>\r\n                        <p>85%: {reportArray[2]}</p>\r\n                        <p>80%: {reportArray[3]}</p>\r\n                        <p>75%: {reportArray[4]}</p>\r\n                        <p>70%: {reportArray[5]}</p>\r\n                        <p>65%: {reportArray[6]}</p>\r\n                        <p>60%: {reportArray[7]}</p>\r\n                        <p>55%: {reportArray[8]}</p>\r\n                        <p>50%: {reportArray[9]}</p>\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //obtains the selected performance option for calculation purposes\r\n    changeScheme(e) {\r\n        this.setState({ markingScheme: e.target.value });\r\n    }\r\n\r\n    //handles the toggling between 'percentage' and 'mark' performances\r\n    selectScheme() {\r\n\r\n        var perButtonStyle, markButtonStyle;\r\n\r\n        if (this.state.markingScheme === \"percentage\") {\r\n            perButtonStyle = \"ui positive button active\"\r\n            markButtonStyle = \"ui button\"\r\n        } else {\r\n            markButtonStyle = \"ui positive button active\"\r\n            perButtonStyle = \"ui button\"\r\n        }\r\n\r\n        return (\r\n            <div id=\"schemeToggleDiv\" class=\"ui buttons\">\r\n                <button id=\"percToggleButton\" class={perButtonStyle} onClick={this.changeScheme.bind(this)} value=\"percentage\">%</button>\r\n                <div class=\"or\"></div>\r\n                <button id=\"markToggleButton\" class={markButtonStyle} onClick={this.changeScheme.bind(this)} value=\"mark\">mark</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //resets the grader fields\r\n    reset() {\r\n        let components = [...this.state.components];\r\n        if (components.length > 1) {\r\n            components.splice(0, components.length - 1);\r\n        }\r\n        components[0].weight = \"\";\r\n        components[0].name = \"\";\r\n        components[0].mark = \"\";\r\n        this.setState({ components });\r\n    }\r\n\r\n\r\n    //calculates final mark\r\n    marker() {\r\n        let components = [...this.state.components];\r\n        var finalGrade = 0;\r\n\r\n        for (let i = 0; i < components.length; i++) {\r\n\r\n            if (this.state.markingScheme === 'percentage') {\r\n                finalGrade += (components[i].weight / 100) * components[i].mark;\r\n            } else {\r\n                finalGrade += components[i].mark * 1;\r\n            }\r\n        }\r\n\r\n        if (this.errorCheck() === \"\") {\r\n            return Math.round(finalGrade * 100) / 100;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    //calculates lost marks\r\n    lostFeedback() {\r\n        let components = [...this.state.components];\r\n        var lost = 0;\r\n        for (let i = 0; i < components.length; i++) {\r\n            if (components[i].weight !== \"\" && components[i].mark !== \"\") {\r\n\r\n                if (this.state.markingScheme === 'percentage') {\r\n                    lost += components[i].weight - (components[i].weight / 100) * components[i].mark;\r\n                } else {\r\n                    lost += components[i].weight - components[i].mark;\r\n                }\r\n            }\r\n        }\r\n        return Math.round(lost * 100) / 100;\r\n    }\r\n\r\n    //calculates accumulated marks\r\n    accumulatedFeedback() {\r\n        let components = [...this.state.components];\r\n        var acc = 0;\r\n        for (let i = 0; i < components.length; i++) {\r\n\r\n            if (components[i].weight !== \"\" && components[i].mark !== \"\") {\r\n\r\n                if (this.state.markingScheme === 'percentage') {\r\n                    acc += components[i].weight / 100 * components[i].mark;\r\n                } else {\r\n                    acc += components[i].mark * 1;\r\n                }\r\n            }\r\n        }\r\n        return Math.round(acc * 100) / 100;\r\n    }\r\n\r\n    //provides report that shows the required performances for grade points\r\n    report() {\r\n        let components = [...this.state.components];\r\n        var totalAccumulated = this.accumulatedFeedback();\r\n        var totalEnteredWeight = 0;\r\n        var totalUnmarkedWeight = 0;\r\n        var unmarkedWeights = [];\r\n        var report = [\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\"]\r\n\r\n\r\n        for (let i = 0; i < components.length; i++) {\r\n            if (components[i].weight !== \"\" && components[i].mark === \"\") {\r\n                unmarkedWeights.push(i);\r\n            }\r\n            totalEnteredWeight += components[i].weight * 1;\r\n        }\r\n\r\n        //calculate the report based on remaining weights\r\n        if (totalEnteredWeight !== 100) {\r\n            totalUnmarkedWeight = 100 - totalEnteredWeight;\r\n\r\n            //calculate the report based on remaining unmarked weights\r\n        } else if (unmarkedWeights.length > 0) {\r\n            for (let i = 0; i < unmarkedWeights.length; i++) {\r\n                totalUnmarkedWeight += components[unmarkedWeights[i]].weight * 1;\r\n            }\r\n        }\r\n\r\n        if (totalEnteredWeight === 100 && this.errorCheck() !== \"\") {\r\n            var index = 0;\r\n            var cutoff;\r\n            for (let i = 94.5; i > 49; i -= 5) {\r\n\r\n                if (this.state.markingScheme === 'percentage') {\r\n                    cutoff = (i - totalAccumulated) / (totalUnmarkedWeight / 100);\r\n                } else {\r\n                    cutoff = i - totalAccumulated;\r\n                }\r\n                report[index] = Math.round(cutoff * 100) / 100;\r\n                index++;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < report.length; i++) {\r\n            if (report[i] < 0) {\r\n                report[i] = <Icon name='checkmark' />;\r\n            }\r\n        }\r\n\r\n        return report;\r\n\r\n    }\r\n\r\n    //error is returned if weights do not total 100 or if all marks are not entered\r\n    errorCheck() {\r\n        var errorMessage = \"\";\r\n        var components = this.state.components;\r\n        var totalWeight = 0;\r\n\r\n        for (let i = 0; i < components.length; i++) {\r\n            totalWeight = totalWeight + parseFloat(components[i].weight);\r\n        }\r\n        if (totalWeight !== 100) {\r\n            errorMessage = \"totalWeight\";\r\n        }\r\n\r\n\r\n        for (let i = 0; i < components.length; i++) {\r\n\r\n            if (components[i].weight === \"\" || components[i].weight < 1 || components[i].weight > 100) {\r\n                errorMessage = \"weightError\";\r\n            } else if (components[i].mark === \"\" || components[i].mark < 0) {\r\n                errorMessage = \"markError\";\r\n            }\r\n        }\r\n\r\n        if (totalWeight > 100) {\r\n            errorMessage = \"exceededWeight\";\r\n        }\r\n\r\n        return errorMessage;\r\n    }\r\n\r\n    //functions that handle the showing and hiding of help modal\r\n    handleOpen = () => this.setState({ showModal: true })\r\n\r\n    handleClose = () => this.setState({ showModal: false })\r\n\r\n    //modal that shows instructions\r\n    modal() {\r\n\r\n        var button = <button id=\"modalTrigger\" class=\"ui inverted blue button\" onClick={this.handleOpen}>help</button>\r\n\r\n        return (\r\n            <Modal\r\n                trigger={button}\r\n                open={this.state.showModal}\r\n                onClose={this.handleClose}\r\n                basic\r\n                size='small'\r\n            >\r\n                <Modal.Content>\r\n                    <p>● Enter weights as percentages /100. The weights in total should equal 100</p>\r\n                    <p>● When a weight and mark is added for a given component, you will be presented with continuous feedback</p>\r\n                    <p>● When all weights and marks are added, the final mark will appear automatically</p>\r\n                    <p>● If you press 'show report', you  will be presented with the performance necessary to obtain the specified grade points</p>\r\n                    <p>● This function is available only when all weights have been entered and there are unmarked components</p>\r\n                    <p>● The necessary performance is displayed as the average performance needed for the unmarked components</p>\r\n                </Modal.Content>\r\n\r\n                <Modal.Actions>\r\n                    <Button color='green' onClick={this.handleClose} inverted><Icon name='checkmark' />Got it</Button>\r\n                </Modal.Actions>\r\n\r\n            </Modal>\r\n\r\n        )\r\n\r\n    }\r\n\r\n    //displays error when weights in total exceed 100\r\n    weightErrorDisplay() {\r\n\r\n    }\r\n\r\n    //progress bar that shows the cumulated marks\r\n    showProgress() {\r\n\r\n        var progress = this.accumulatedFeedback().toString() + \"%\";\r\n\r\n        return (\r\n\r\n            <div id=\"bar\" class=\"ui active indicating progress\" data-percent={progress}>\r\n                <div style={{ width: progress, maxWidth: \"100%\" }} class=\"bar\">\r\n                    <div class=\"progress\">{progress}</div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"graderDiv\">\r\n\r\n                <div className=\"container\">\r\n\r\n\r\n                    <div id=\"UI\" class=\"ui segment\">\r\n\r\n                        <div className=\"UITop\">\r\n                            {this.modal()}\r\n                            {this.selectScheme()}\r\n                        </div>\r\n\r\n                        <div className=\"UIMiddle\">\r\n                            {this.addResetButtons()}\r\n                        </div>\r\n\r\n                        <div className=\"UIBottom\">\r\n                            {this.createUI()}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"OutputSection\">\r\n                    {this.showProgress()}\r\n                    {this.output()}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default grader;\r\n","import React, { Component } from 'react';\r\nimport './css/App.css';\r\n\r\nclass error extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <div>\r\n        <p>oops! page not found...</p>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default error;","import React, { Component } from 'react';\r\nimport './css/test.css';\r\nimport githubIcon from '../res/github.png'\r\nimport linkedinIcon from '../res/linkedin.png'\r\nimport instaIcon from '../res/instagram.png'\r\nimport { Popup, Card, Image, Rating, Segment, Reveal, Visibility, Progress } from 'semantic-ui-react'\r\nimport graderPicture from '../res/grader.png'\r\n\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nvar graderDescription = \"Enter your marks for components of a course, receive continuous feedback, and dynamically calculate your final grade\";\r\n\r\n\r\nclass testapp extends Component {\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div></div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default testapp;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './css/projects.css';\r\nimport resumeFile from '../res/resume.pdf'\r\n\r\nclass Resume extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <iframe src={resumeFile}\r\n        width=\"100%\" height=\"1000\" frameborder=\"0\" allowfullscreen sandbox>\r\n      </iframe>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\"\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport './components/css/App.css';\r\n\r\n\r\nimport Footer from './components/footer.js';\r\nimport MainPage from './components/mainPage.js';\r\nimport Grader from './components/grader.js';\r\nimport Error from './components/error.js';\r\nimport Test from './components/test.js';\r\nimport Resume from './components/resume.js';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <HashRouter >\r\n\r\n          <div className=\"content\">\r\n\r\n            <Switch>\r\n              <Route path=\"/\" component={MainPage} exact/> \r\n              <Route path=\"/resume\" component={Resume} exact/> \r\n              <Route path=\"/grader\" component={Grader} exact/> \r\n              <Route component={Error} /> \r\n            </Switch>\r\n\r\n            <Footer />\r\n\r\n          </div>\r\n\r\n      </HashRouter>\r\n\r\n\r\n);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}